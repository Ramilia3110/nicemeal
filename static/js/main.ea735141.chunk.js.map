{"version":3,"sources":["images/header.jpg","images/p1.jpg","images/p2.jpg","images/p3.jpg","images/chef.jpg","Recipe/Recipe.js","Recipe/Recipes.js","Nav.js","Home/Header.js","Home/Section.js","Home/Chef.js","Home/Home.js","About.js","Socialmedia.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Styles","styled","div","Recipe","title","cuisine","image","instructions","className","src","alt","Recipes","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","async","fetch","response","json","data","result","meals","onSubmit","e","preventDefault","type","value","onChange","target","map","recipe","key","idMeal","strMeal","strArea","strMealThumb","strInstructions","Nav","href","headerimg","Header","Section","p3","p1","p2","Chef","chef","Home","About","Socialmedia","icon","faTwitter","size","faYoutube","faFacebook","faInstagram","faTelegram","Footer","App","Fragment","style","marginTop","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea735141.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header.38d13b55.jpg\";","module.exports = __webpack_public_path__ + \"static/media/p1.b04db001.jpg\";","module.exports = __webpack_public_path__ + \"static/media/p2.f2f493ec.jpg\";","module.exports = __webpack_public_path__ + \"static/media/p3.4f549847.jpg\";","module.exports = __webpack_public_path__ + \"static/media/chef.6a5b427c.jpg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .recipe-container {\n    margin: 0 0.5rem 3rem 0.5rem;\n    width: 100%;\n  }\n  .recipe-img {\n    object-fit: cover;\n    width: 100%;\n    border-radius: 3rem;\n  }\n  .recipe-content {\n    background-color: white;\n    width: 100%;\n    border-radius: 3rem;\n  }\n  @media (min-width: 992px) {\n    .recipe-img {\n      width: 40%;\n      max-size: 25rem;\n    }\n\n    .recipe-content {\n      max-size: 25rem;\n      width: 40%;\n    }\n  }\n`;\n\nconst Recipe = ({ title, cuisine, image, instructions }) => {\n  return (\n    <Styles>\n      <div className=\"recipe\">\n        <div className=\"recipe-row\">\n          <div className=\"recipe-container\">\n            <img className=\"recipe-img\" src={image} alt=\" \" />\n            <div className=\"recipe-content\">\n              <h1>{title}</h1>\n              <h4>Cuisine: {cuisine}</h4>\n              <p>{instructions} </p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Styles>\n  );\n};\n\nexport default Recipe;\n","import React, { useEffect, useState } from \"react\";\nimport Recipe from \"./Recipe\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .search-form {\n    min-height: 10vh;\n    display: flex;\n    justify-content: start;\n    align-items: center;\n  }\n\n  .search-bar {\n    width: 45%;\n    height: 7vh;\n    border: none;\n    margin: 2em 1em;\n    border-radius: 3em;\n    font-size: 1.3rem;\n  }\n\n  .search-button {\n    background: rgb(9, 158, 89);\n    border: none;\n    border-radius: 3em;\n    padding: 10px 30px;\n    color: white;\n    font-size: 1.3rem;\n  }\n\n  .recipes-blog {\n    width: 80%;\n    margin: 0 auto;\n  }\n  .recipes {\n    display: flex;\n    justify-content: space-between;\n    align-items: start;\n    flex-wrap: wrap;\n  }\n`;\n\nconst Recipes = () => {\n  const APP_ID = \"371c7184\";\n  const APP_KEY = \"f79692a0b2038d1e6b10f9eef335e75f\";\n\n  const [recipes, setRecipes] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [query, setQuery] = useState(\" \");\n\n  useEffect(() => {\n    getRecipes();\n  }, [query]);\n\n  const getRecipes = async () => {\n    const response = await fetch(\n      `https://www.themealdb.com/api/json/v1/1/search.php?s=${query}`\n    );\n    const data = await response.json();\n    const result = data.meals;\n    setRecipes(result);\n  };\n\n  const handleSearch = e => {\n    setSearch(e.target.value);\n  };\n\n  const getSearch = e => {\n    e.preventDefault();\n    setQuery(search);\n    setSearch(\"\");\n  };\n\n  return (\n    <Styles>\n      <div className=\"recipes-blog\">\n        <form onSubmit={getSearch} className=\"search-form\">\n          <input\n            className=\"search-bar\"\n            type=\"text\"\n            value={search}\n            onChange={handleSearch}\n          />\n          <button className=\"search-button\" type=\"submit\">\n            Search\n          </button>\n        </form>\n        <div className=\"recipes\">\n          {recipes == null ? (\n            <p>Not Found</p>\n          ) : (\n            recipes.map(recipe => (\n              <Recipe\n                key={recipe.idMeal}\n                title={recipe.strMeal}\n                cuisine={recipe.strArea}\n                image={recipe.strMealThumb}\n                instructions={recipe.strInstructions}\n              />\n            ))\n          )}\n          ;\n        </div>\n      </div>\n    </Styles>\n  );\n};\n\nexport default Recipes;\n","import React from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  nav {\n    height: 10vh;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    z-index: 15;\n    background-image: linear-gradient(\n      to right,\n      rgb(9, 158, 89),\n      rgb(24, 216, 168),\n      rgb(147, 199, 50),\n      rgb(24, 216, 168),\n      rgb(147, 199, 50),\n      rgb(24, 216, 168),\n      rgb(9, 158, 89)\n    );\n  }\n  .logo {\n    color: aliceblue;\n    margin-left: 2em;\n    font-size: 1.2rem;\n    text-transform: uppercase;\n    font-weight: 300;\n\n    a {\n      text-decoration: none;\n      color: white;\n    }\n  }\n  .nav-links {\n    width: 40%;\n    display: flex;\n    justify-content: space-around;\n    list-style: none;\n    color: aliceblue;\n  }\n  .link {\n    list-style: none;\n    text-decoration: none;\n    color: white;\n    font-size: 1.2rem;\n    text-transform: uppercase;\n    font-weight: 300;\n  }\n`;\n\nconst Nav = () => {\n  return (\n    <Styles>\n      <div>\n        <nav>\n          <h3 className=\"logo\">\n            <a href=\"/\">Nice Meal</a>\n          </h3>\n\n          <ul className=\"nav-links\">\n            <li>\n              <a className=\"link\" href=\"/recipes\">\n                Recipes\n              </a>\n            </li>\n            <li>\n              {\" \"}\n              <a className=\"link\" href=\"/about\">\n                About us\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </Styles>\n  );\n};\nexport default Nav;\n","import React from \"react\";\nimport \"../App.css\";\nimport styled from \"styled-components\";\nimport headerimg from \"../images/header.jpg\";\n\nconst Styles = styled.div`\n  .header {\n    background-image: url(${headerimg});\n    background-size: cover;\n    background-repeat: no-repeat;\n    height: 70vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .header h1 {\n    color: white;\n    font-weight: 300;\n    font-size: 3.8rem;\n    text-transform: uppercase;\n    line-height: 4.2rem;\n  }\n  @media (min-width: 992px) {\n    .header h1 {\n      font-size: 5rem;\n    }\n  }\n`;\n\nconst Header = () => {\n  return (\n    <Styles>\n      <div className=\"header\">\n        <h1>We are what we eat</h1>\n      </div>\n    </Styles>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"../App.css\";\nimport styled from \"styled-components\";\nimport p1 from \"../images/p1.jpg\";\nimport p2 from \"../images/p2.jpg\";\nimport p3 from \"../images/p3.jpg\";\n\nconst Styles = styled.div`\n  .section {\n    background-color: white;\n    margin: 8rem 3rem 1rem 3rem;\n    padding: 12rem auto;\n    &-heading {\n        margin: 3rem auto;\n        font-size: 3.5rem;\n        letter-spacing: 0.35rem;\n        font-weight: 300;\n        color: #182E0B  ;\n      }\n  }\n \n  .row {\n   min-height: 100vh;\n  }\n  .col-1-of-2 {\n    width: 100%;\n    height: auto;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    h3 {\n        margin: 1.5rem auto;\n        padding: 1rem 1rem;\n        font-size:2rem;\n        font-weight:300;\n      }\n  }\n  \n  .col-2-of-2 {\n    margin-top:5rem;\n    width: 100%;\n    height: auto;\n  }\n  .composition {\n    position: relative;\n    &__photo {\n      width: 100%;\n      box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);\n      border-radius: 3px;\n      position: relative;\n      outline-offset: 2rem;\n      transition: all 0.2s;\n      margin 3rem auto;\n    }\n  }\n  @media (min-width: 992px) {\n    .row {\n      display: grid;\n      grid-template-rows: min-content;\n      grid-template-columns:\n        [full-start first-start] minmax(50vw, min-content)\n        [first-end second-start] minmax(50vw, min-content)\n        [second-end full-end];\n    }\n    .col-1-of-2 {\n      grid-column: first-start/first-end;\n\n      h3 {\n        padding: 1.2rem 1rem;\n       \n      }\n      p{\n          line-height:1.7rem;\n      }\n    }\n    .col-2-of-2 {\n      grid-column: second-start/second-end;\n      margin-top:0;\n    }\n\n    .composition {\n      position: relative;\n      &__photo {\n        width: 40%;\n        box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);\n        border-radius: 3px;\n        position: absolute;\n        z-index: 10;\n        outline-offset: 2rem;\n        transition: all 0.2s;\n        &--1 {\n          left: 0;\n          top: 2rem;\n        }\n        &--2 {\n          right: 11rem;\n          top: 13rem;\n        }\n        &--3 {\n          left: 0;\n          top: 25rem;\n        }\n      }\n    }\n  }\n`;\n\nconst Section = () => {\n  return (\n    <Styles>\n      <div className=\"section\">\n        <h2 className=\"section-heading\">\n          Positive atmosphere with healthy food.\n        </h2>\n        <div className=\"row\">\n          <div className=\"col-1-of-2\">\n            <h3>Make your food incredible, tasty and healthy.</h3>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              image compasition nisi ut aliquip ex ea commodo consequat. Duis\n              aute irure dolor in reprehenderit in voluptate velit esse cillum\n              dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n              non proident, sunt in culpa qui officia deserunt mollit anim id\n              est laborum.\n            </p>\n\n            <h3>Make your food incredible, tasty and healthy.</h3>\n            <p>\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n              eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut\n              enim ad minim veniam, quis nostrud exercitation ullamco laboris\n              image compasition nisi ut aliquip ex ea commodo consequat. Duis\n              aute irure dolor in reprehenderit in voluptate velit esse cillum\n              dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat\n              non proident, sunt in culpa qui officia deserunt mollit anim id\n              est laborum.\n            </p>\n          </div>\n          <div className=\"col-2-of-2\">\n            <div className=\"composition\">\n              <img\n                src={p3}\n                className=\"composition__photo composition__photo--1\"\n              />\n              <img\n                src={p1}\n                className=\"composition__photo composition__photo--2\"\n              />\n              <img\n                src={p2}\n                className=\"composition__photo composition__photo--3\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </Styles>\n  );\n};\n\nexport default Section;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport chef from \"../images/chef.jpg\";\n\nconst Styles = styled.div`\n  .chef {\n    position: relative;\n    width: 100%;\n    margin: 1.5 rem 3rem;\n    padding 3rem 2rem;\n    bacground-color:white;\n    &-img {\n      width: 80%;\n      height: 100%;\n      object-fit: scale-down;\n      radius-border:2rem;\n    }\n  }\n\n  h1{\n    font-size:3rem;\n    font-weight:300;\n    line-height:3.5rem;\n    margin-bottom:3rem;\n    text-transform:uppercase;\n    color:white;\n}\n  @media (min-width: 992px) {\n    .chef {\n      max-width: 25rem;\n      margin: 1.5 rem 3rem;\n      top: 50%;\n      left: 35%;\n      transform: translate(-50% -50%);\n      &-img {\n        width: 100%;\n        height: 100%;\n        object-fit: scale-down;\n      }\n    }\n  }\n`;\n\nfunction Chef() {\n  return (\n    <Styles>\n      <div className=\"chef\">\n        <h1>Happy to cook, happy to live.</h1>\n        <img className=\"chef-img\" src={chef} />\n      </div>\n    </Styles>\n  );\n}\n\nexport default Chef;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Section from \"./Section\";\nimport Chef from \"./Chef\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Header />\n      <Section />\n      <Chef />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .about {\n    position: relative;\n    background-color: white;\n    width: 80%;\n    margin 3rem auto;\n    text-align:center;\n    h1 {\n      margin: 3rem auto;\n      font-size: 3.5rem;\n      letter-spacing: 0.35rem;\n      font-weight: 300;\n      color: #182e0b;\n    }\n    p{\n      font-size:1.2rem;\n      font-weight:300;\n      line-height:2rem;\n      letter-spacing:.2rem;\n      padding: 0 2rem .5rem 2rem;\n        \n    }\n  }\n`;\n\nconst About = () => {\n  return (\n    <Styles>\n      <div className=\"about\">\n        <h1>About us</h1>\n        <p>\n          Lorem ipsum, or lipsum as it is sometimes known, is dummy text used in\n          laying out print, graphic or web designs. The passage is attributed to\n          an unknown typesetter in the 15th century who is thought to have\n          scrambled parts of Cicero's De Finibus Bonorum et Malorum for use in a\n          type specimen book. It usually begins with: “Lorem ipsum dolor sit\n          amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut\n          labore et dolore magna aliqua.” The purpose of lorem ipsum is to\n          create a natural looking block of text (sentence, paragraph, page,\n          etc.) that doesn't distract from the layout. A practice not without\n          controversy, laying out pages with meaningless filler text can be very\n          useful when the focus is meant to be on design, not content. The\n          passage experienced a surge in popularity during the 1960s when\n          Letraset used it on their dry-transfer sheets, and again during the\n          90s as desktop publishers bundled the text with their software. Today\n          it's seen all around the web; on templates, websites, and stock\n          designs. Use our generator to get your own, or read on for the\n          authoritative history of lorem ipsum.\n        </p>\n      </div>\n    </Styles>\n  );\n};\nexport default About;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faYoutube,\n  faFacebook,\n  faTwitter,\n  faInstagram,\n  faTelegram\n} from \"@fortawesome/free-brands-svg-icons\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .social-media {\n    background: white;\n    padding: 1.6rem 3.2rem;\n    text-align:center;\n    h3{\n        font-size:1.1rem;\n        font-weight:300;\n        padding:3rem auto;\n    }\n  }\n  .social {\n      margin 1rem 1rem;\n      transition:transform .25s ease;\n      display:inline-block;\n      &:hover{\n          transformY(-2px);\n      }\n     }\n\n     .twitter{\n        color:#00acee;\n    }\n    .youtube{\n        color: #FF0000;\n    }\n    .facebook{\n        color:#3b5998;\n    }\n    .instagram{\n        color:#C13584;\n    }\n    .telegram{\n        color:#0088cc;\n    }\n  \n\n`;\n\nfunction Socialmedia() {\n  return (\n    <Styles>\n      <div className=\"social-media\">\n        <h3>You can also find us on social media.</h3>\n        <a href=\"#\" className=\"twitter social\">\n          <FontAwesomeIcon icon={faTwitter} size=\"2x\" />\n        </a>\n        <a href=\"#\" className=\"youtube social\">\n          <FontAwesomeIcon icon={faYoutube} size=\"2x\" />\n        </a>\n        <a href=\"#\" className=\"facebook social\">\n          <FontAwesomeIcon icon={faFacebook} size=\"2x\" />\n        </a>\n        <a href=\"#\" className=\"instagram social\">\n          <FontAwesomeIcon icon={faInstagram} size=\"2x\" />\n        </a>\n        <a href=\"#\" className=\"telegram social\">\n          <FontAwesomeIcon icon={faTelegram} size=\"2x\" />\n        </a>\n      </div>\n    </Styles>\n  );\n}\n\nexport default Socialmedia;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Styles = styled.div`\n  .footer {\n    color: white;\n    text-align: center;\n    font-size: 1rem;\n    letter-spacing: 0.25rem;\n    padding: 3rem auto;\n    margin: 2rem auto;\n  }\n`;\n\nfunction Footer() {\n  return (\n    <Styles>\n      <div className=\"footer\">\n        <p>© 2020 Created By Ramilia Imankulova.All Rights Reserved.</p>\n      </div>\n    </Styles>\n  );\n}\n\nexport default Footer;\n","import React from \"react\";\nimport Recipes from \"./Recipe/Recipes\";\nimport Nav from \"./Nav\";\nimport Home from \"./Home/Home\";\nimport About from \"./About\";\nimport Socialmedia from \"./Socialmedia\";\nimport Footer from \"./Footer\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <Nav />\n      <Router>\n        <div className=\"App\">\n          <p className=\"hidden\"> Hidden text ghghjhjkjkj </p>\n          <div style={{ marginTop: \"84px\" }}></div>\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" exact component={About} />\n            <Route path=\"/recipes\" component={Recipes} />\n          </Switch>\n        </div>\n      </Router>\n      <Socialmedia />\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}